"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Play, Pause } from "lucide-react"
import Image from "next/image"
import { cn } from "@/lib/utils"
import { useInView } from "react-intersection-observer"

export default function DemoSection() {
  const [isPlaying, setIsPlaying] = useState(false)
  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.1,
  })

  const togglePlay = () => {
    setIsPlaying(!isPlaying)
  }

  return (
    <section className="py-24 relative overflow-hidden">
      <div className="container">
        <div className="text-center max-w-3xl mx-auto mb-16">
          <span className="section-title-tag">–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è</span>
          <h2
            ref={ref}
            className={cn(
              "text-3xl md:text-4xl font-bold mb-6 transition-opacity transition-transform duration-500",
              inView ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10",
            )}
            style={{ willChange: "transform, opacity" }}
          >
            –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ <span className="text-primary">—Ä–∞–±–æ—Ç–∞—é—Ç</span> –Ω–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è
          </h2>
          <p className="text-white/80">
            –ö–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –Ω–∞—à–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç –∫–ª–∏–Ω–∏–∫–∞–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —É–ª—É—á—à–∞—Ç—å
            –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
          </p>
        </div>

        <div className="relative max-w-4xl mx-auto rounded-2xl overflow-hidden shadow-xl border border-white/10 group">
          <div className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-200"></div>

          <Image
            src="/placeholder.svg?height=600&width=1000"
            alt="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã"
            width={1000}
            height={600}
            className="w-full"
            priority
          />

          <Button
            onClick={togglePlay}
            size="icon"
            className={cn(
              "absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-20 h-20 rounded-full bg-white/20 backdrop-blur-sm text-white hover:bg-primary hover:text-white transition-transform transition-colors duration-200 shadow-xl",
              "group-hover:scale-110",
            )}
            style={{ willChange: "transform, background-color" }}
          >
            {isPlaying ? <Pause className="h-8 w-8" /> : <Play className="h-8 w-8 ml-1" />}
          </Button>

          <div 
            className="absolute bottom-0 left-0 right-0 p-6 bg-black/80 backdrop-blur-sm transform translate-y-full group-hover:translate-y-0 transition-transform duration-200"
            style={{ willChange: "transform" }}
          >
            <h3 className="text-xl font-bold mb-2 text-white">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è AI –≤ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã</h3>
            <p className="text-sm opacity-80 text-white">
              –í–∏–¥–µ–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤—Ä–∞—á–∞–º –≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ –∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π, –∞ —Ç–∞–∫–∂–µ
              –∫–∞–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∫–ª–∏–Ω–∏–∫–∏.
            </p>
          </div>
        </div>

        <div className="mt-12 grid grid-cols-1 md:grid-cols-3 gap-8">
          {[
            {
              icon: "üè•",
              title: "–î–ª—è –∫–ª–∏–Ω–∏–∫",
              description: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∞."
            },
            {
              icon: "üë®‚Äç‚öïÔ∏è",
              title: "–î–ª—è –≤—Ä–∞—á–µ–π",
              description: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ, –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏."
            },
            {
              icon: "üßë‚Äçü§ù‚Äçüßë",
              title: "–î–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤",
              description: "–£–¥–æ–±–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º, –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –ª–µ—á–µ–Ω–∏—é."
            }
          ].map((item, index) => (
            <div 
              key={index}
              className="bg-secondary border border-white/10 rounded-xl p-6 shadow-md hover:shadow-lg hover:shadow-primary/10 transition-shadow transition-transform duration-200 hover:-translate-y-1"
              style={{ 
                transitionDelay: `${index * 50}ms`,
                willChange: "transform, box-shadow" 
              }}
            >
              <div className="text-2xl mb-4">{item.icon}</div>
              <h4 className="text-lg font-bold mb-2 text-white">{item.title}</h4>
              <p className="text-sm opacity-80 text-white">
                {item.description}
              </p>
            </div>
          ))}
        </div>
      </div>
    </section>
  )
}
