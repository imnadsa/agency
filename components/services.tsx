"use client"

import { useState, useCallback } from "react"
import { useInView } from "react-intersection-observer"
import { ArrowRight } from "lucide-react"
import { cn } from "@/lib/utils"
import Image from "next/image"

type ServiceCardProps = {
  icon?: string
  title: string
  description: string
  index: number
  logos?: React.ReactNode
  features?: string[]
  onClick?: () => void
}

function ServiceCard({ icon, title, description, index, logos, features, onClick }: ServiceCardProps) {
  const [isHovered, setIsHovered] = useState(false)
  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.1,
  })

  return (
    <div
      ref={ref}
      className={cn(
        "bg-secondary border border-white/10 rounded-2xl p-6 transition-shadow transition-opacity transition-transform duration-300 relative overflow-hidden group",
        isHovered ? "shadow-md shadow-primary/10 -translate-y-2" : "hover:shadow-sm",
        inView ? "opacity-100 translate-y-0" : "opacity-0 translate-y-5",
      )}
      style={{
        transitionDelay: `${Math.min(index * 50, 400)}ms`,
        willChange: "transform, opacity, box-shadow",
      }}
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
      onClick={onClick}
    >
      {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
      <div
        className={cn(
          "absolute inset-0 bg-gradient-to-br from-primary/10 to-accent-cyan/10 opacity-0 transition-opacity duration-250",
          isHovered && "opacity-100",
        )}
        style={{ willChange: "opacity" }}
      />

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="relative z-10">
        <div className="flex justify-between items-start">
          <div className="flex-1">
            <h3
              className={cn(
                "text-2xl font-bold mb-4 text-white transition-colors duration-200",
                isHovered && "text-primary",
              )}
            >
              {title}
            </h3>
            <p className="text-white/80 mb-6 leading-relaxed">{description}</p>

            {/* –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π */}
            {features && features.length > 0 && (
              <ul className="space-y-2 mb-6">
                {features.map((feature, idx) => (
                  <li key={idx} className="flex items-start gap-2">
                    <span className="text-accent-cyan mt-1 flex-shrink-0">‚úì</span>
                    <span className="text-white/70">{feature}</span>
                  </li>
                ))}
              </ul>
            )}

            {/* –õ–æ–≥–æ—Ç–∏–ø—ã */}
            {logos && (
              <div className="flex flex-wrap gap-3 mt-4 mb-2">
                {logos}
              </div>
            )}

            {/* CTA */}
            <div
              className={cn(
                "mt-6 inline-flex items-center text-sm font-medium text-accent-cyan opacity-0 transform translate-x-[-10px] transition-all duration-250",
                isHovered && "opacity-100 translate-x-0",
              )}
              style={{ willChange: "opacity, transform" }}
            >
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ <ArrowRight className="ml-1 w-4 h-4" />
            </div>
          </div>

          {icon && (
            <div
              className={cn(
                "text-4xl bg-primary/20 p-4 rounded-xl text-accent-cyan transition-transform duration-200",
                isHovered && "scale-110 rotate-3",
              )}
              style={{ willChange: "transform" }}
            >
              {icon}
            </div>
          )}
        </div>
      </div>
    </div>
  )
}

export default function Services() {
  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.1,
  })

  const services = [
    {
      title: "–¢–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞",
      description: "–ü—Ä–∏–≤–æ–¥–∏–º —Ü–µ–ª–µ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –ø–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏, –º–∞—Å—à—Ç–∞–±–∏—Ä—É—è –≤–∞—à –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –±–∏–∑–Ω–µ—Å.",
      icon: "üéØ",
      features: [
        "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏",
        "–†–µ—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥ –∏ –ø–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –∞—É–¥–∏—Ç–æ—Ä–∏–π",
        "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–π –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
      ],
      logos: (
        <>
          <Image
            src="/icons/Group.png"
            alt="VK"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
          <Image
            src="/icons/Group 7.png"
            alt="MT"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
          <Image
            src="/icons/nu –∏–∫–æ–Ω–∫–∏.png"
            alt="TG"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
          <Image
            src="/icons/Clip path group.png"
            alt="OK"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
        </>
      ),
    },
    {
      title: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤",
      description: "–°–æ–∑–¥–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Å–∞–π—Ç—ã —Å –≤—ã—Å–æ–∫–æ–π –∫–æ–Ω–≤–µ—Ä—Å–∏–µ–π, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ –≤–∞—à–µ–π –∫–ª–∏–Ω–∏–∫–∏.",
      icon: "üíª",
      features: [
        "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM –∏ –ú–ò–° —Å–∏—Å—Ç–µ–º–∞–º–∏",
        "SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –±—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞",
      ],
      logos: (
        <>
          <Image
            src="/icons/saitTD.png"
            alt="Sait TD"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
          <Image
            src="/icons/saitFG.png"
            alt="Sait FG"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
        </>
      ),
    },
    {
      title: "SMM-–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ",
      description: "–ü–æ–≤—ã—à–∞–µ–º —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å –≤–∞—à–µ–π –∫–ª–∏–Ω–∏–∫–∏ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–æ–≤–µ—Ä–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π.",
      icon: "üì±",
      features: [
        "–ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—Å–ª—É–≥",
        "–í–æ–≤–ª–µ–∫–∞—é—â–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ —Å—Ç–æ—Ä–∏—Å",
        "–†–∞–±–æ—Ç–∞ —Å —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö",
      ],
      logos: (
        <>
          <Image
            src="/icons/smmGPT.png"
            alt="SMM GPT"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
          <Image
            src="/icons/smmPLANER.png"
            alt="SMM Planer"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
        </>
      ),
    },
    {
      title: "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞",
      description: "–ü—Ä–∏–≤–ª–µ–∫–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Ç–æ—á–Ω–æ –≤ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –æ–Ω–∏ –∏—â—É—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —É—Å–ª—É–≥–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≤—ã—Å–æ–∫—É—é –∫–æ–Ω–≤–µ—Ä—Å–∏—é.",
      icon: "üîç",
      features: [
        "–ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤",
        "A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π",
        "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç–∞–≤–æ–∫ –∏ –±—é–¥–∂–µ—Ç–∞",
      ],
      logos: (
        <>
          <Image
            src="/icons/kontekstYA.png"
            alt="Kontekst YA"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
        </>
      ),
    },
    {
      title: "–ò–ò-–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
      description: "–í–Ω–µ–¥—Ä—è–µ–º –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –±–∞–∑–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤–∞—à–µ–π –∫–ª–∏–Ω–∏–∫–∏.",
      icon: "ü§ñ",
      features: [
        "–ß–∞—Ç-–±–æ—Ç—ã –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π",
        "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞",
        "–ü—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–ø–æ—Ç–æ–∫–∞",
      ],
      logos: (
        <>
          <Image
            src="/icons/aiN8N.png"
            alt="AI N8N"
            width={50}
            height={50}
            className="w-12 h-12 transition-transform duration-200 hover:scale-110 hover:rotate-3"
          />
        </>
      ),
    },
  ]

  const handleCardClick = useCallback((index: number) => {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  }, [])

  return (
    <section
      id="services"
      className="py-24 relative overflow-hidden bg-gradient-to-r from-primary/5 to-accent-cyan/5"
    >
      <div className="container">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
        <div className="text-center max-w-3xl mx-auto mb-16">
          <span className="section-title-tag">–ù–∞—à–∏ —É—Å–ª—É–≥–∏</span>
          <h2
            ref={ref}
            className={cn(
              "text-3xl md:text-4xl font-bold mb-6 transition-opacity transition-transform duration-500",
              inView ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10",
            )}
            style={{ willChange: "transform, opacity" }}
          >
            –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ <span className="text-primary">digital-—Ä–µ—à–µ–Ω–∏—è</span> –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∫–ª–∏–Ω–∏–∫
          </h2>
          <p className="text-white/80">
            –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä digital-—É—Å–ª—É–≥, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –æ—Ç—Ä–∞—Å–ª–∏
          </p>
        </div>

        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div className="absolute top-1/3 left-0 w-64 h-64 bg-primary/5 rounded-full filter blur-3xl opacity-70 -z-10"></div>
        <div className="absolute bottom-1/3 right-0 w-80 h-80 bg-accent-cyan/5 rounded-full filter blur-3xl opacity-70 -z-10"></div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div className="col-span-1 md:col-span-2">
            <ServiceCard
              title={services[0].title}
              description={services[0].description}
              icon={services[0].icon}
              index={0}
              logos={services[0].logos}
              features={services[0].features}
            />
          </div>

          {services.slice(1).map((service, index) => (
            <ServiceCard
              key={index + 1}
              title={service.title}
              description={service.description}
              icon={service.icon}
              index={index + 1}
              logos={service.logos}
              features={service.features}
              onClick={() => handleCardClick(index + 1)}
            />
          ))}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –≤–Ω–∏–∑—É */}
        <div className="mt-12 text-center">
          <a
            href="#contact"
            className={cn(
              "inline-flex items-center justify-center h-10 px-6 py-2 bg-primary text-white rounded-lg transition-colors duration-200",
              "hover:bg-primary/90 hover:shadow-md hover:shadow-primary/20",
            )}
            style={{ willChange: "background-color, box-shadow" }}
          >
            –û–±—Å—É–¥–∏—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç
          </a>
        </div>
      </div>
    </section>
  )
}
